function result = estimate_3D_point(c1, c2, u1, v1, u2, v2)
x1=1;
x2=2;
x3=3;
x4=4;

x=x1;
A=[(c1(1,2)-c1(3,2)*u1),(c1(1,3)-c1(3,3)*u1);(c1(2,2)-c1(3,2)*v1),(c1(2,3)-c1(3,3)*v1)];
B=[c1(3,1)*x*u1+u1-c1(1,1)*x-c1(1,4);c1(3,1)*x*v1+v1-c1(2,1)*x-c1(2,4)];
W=A\B;
%L1_P1=(x1,y1,z1)
L1_P1=[x1 W(1) W(2)];

x=x2;
B=[c1(3,1)*x*u1+u1-c1(1,1)*x-c1(1,4);c1(3,1)*x*v1+v1-c1(2,1)*x-c1(2,4)];
W=A\B;
%L1_P2=(x2,y2,z2)
L1_P2=[x2 W(1) W(2)];

%L1_u1=(x2-x1, y2-y1, z2-z1);
L1_u1=[L1_P2(1)-L1_P1(1) L1_P2(2)-L1_P1(2) L1_P2(3)-L1_P1(3)];

%%%%%%%%%%%%%%%%%%%%%%%%
x=x3;
A=[(c2(1,2)-c2(3,2)*u2) (c2(1,3)-c2(3,3)*u2);(c2(2,2)-c2(3,2)*v2) (c2(2,3)-c2(3,3)*v2)];
B=[c2(3,1)*x*u2+u2-c2(1,1)*x-c2(1,4);c2(3,1)*x*v2+v2-c2(2,1)*x-c2(2,4)];
W=A\B;
%L2_P1=(x3,y3,z3)
L2_P1=[x3 W(1) W(2)];

x=x4;
B=[c2(3,1)*x*u2+u2-c2(1,1)*x-c2(1,4);c2(3,1)*x*v2+v2-c2(2,1)*x-c2(2,4)];
W=A\B;
%L2_P2=(x4,y4,z4)
L2_P2=[x4 W(1) W(2)];

%L2_u2=(x4-x3, y4-y3, z4-z3);
L2_u2=[L2_P2(1)-L2_P1(1) L2_P2(2)-L2_P1(2) L2_P2(3)-L2_P1(3)];

A=[dot(L1_u1',L1_u1) dot(-L2_u2',L1_u1);dot(L1_u1',L2_u2) dot(-L2_u2',L2_u2)];
B=[dot(L2_P1',L1_u1)-dot(L1_P1',L1_u1);dot(L2_P1',L2_u2)-dot(L1_P1',L2_u2)];
%[a1;a2]
W=A\B;
a1=W(1);
a2=W(2);

result=((L1_P1+a1*L1_u1)+(L2_P1+a2*L2_u2))/2;

end